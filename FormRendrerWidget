import {
    Checkbox,
    Col,
    DatePicker,
    Form,
    Input,
    InputNumber,
    Radio,
    Row,
    Select,
} from 'antd'
import React, { useEffect } from 'react'
import { uid } from 'uid'
// import { generateId } from '.'

const FormRendrerWidget = (props) => {
    // useEffect(() => {
    //     console.log(props.schema)
    // }, [props])

    return (
        <Row gutter={24}>
            {props?.schema !== null &&
                props?.schema !== undefined &&
                props?.schema.map((x) => {
                    return (
                        <Col
                            key={uid()}
                            xs={props?.xs || 24}
                            sm={props?.small || 12}
                            md={props?.md || 8}
                        >
                            {x.type === 'checkbox-group' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <Checkbox.Group style={{ width: '100%' }}>
                                        <Row>
                                            {x.options.map((option) => (
                                                <Col key={uid()} span={8}>
                                                    <Checkbox
                                                        value={option.value}
                                                    >
                                                        {option.label}
                                                    </Checkbox>
                                                </Col>
                                            ))}
                                        </Row>
                                    </Checkbox.Group>
                                </Form.Item>
                            )}
                            {x.type === 'date' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <DatePicker
                                        placeholder={x.placeholder}
                                        style={{ width: '100%' }}
                                    />
                                </Form.Item>
                            )}
                            {x.type === 'number' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <InputNumber
                                        placeholder={x.placeholder}
                                        style={{ width: '100%' }}
                                    />
                                </Form.Item>
                            )}

                            {x.type === 'radio-group' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <Radio.Group options={x.values} />
                                </Form.Item>
                            )}
                            {x.type === 'select' && (
                                <Form.Item
                                    initialValue={x.initialValue}
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <Select
                                        placeholder={x.placeholder}
                                        options={x.options}
                                    />
                                </Form.Item>
                            )}
                            {x.type === 'text' && x.subtype === 'text' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <Input placeholder={x.placeholder} />
                                </Form.Item>
                            )}
                            {x.type === 'text' && x.subtype === 'money' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <InputNumber
                                        style={{ width: '100%' }}
                                        placeholder={x.placeholder}
                                        parser={(value) =>
                                            value.replace(/(,*)/g, '')
                                        }
                                        formatter={(value) =>
                                            `${value}`.replace(
                                                /\B(?=(\d{3})+(?!\d))/g,
                                                ','
                                            )
                                        }
                                    />
                                </Form.Item>
                            )}
                            {x.type === 'textarea' && (
                                <Form.Item
                                    name={x.name}
                                    label={x.label}
                                    rules={[{ required: x.required }]}
                                >
                                    <Input.TextArea
                                        placeholder={x.placeholder}
                                        rows={x?.rows ?? 4}
                                    />
                                </Form.Item>
                            )}
                        </Col>
                    )
                })}
        </Row>
    )
}

export default FormRendrerWidget
